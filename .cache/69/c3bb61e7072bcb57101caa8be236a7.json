{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","dependencies":[{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js.map","includedInParent":true,"mtime":1601050224735},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/src/ops/boolean_mask.ts","includedInParent":true,"mtime":1601050224735},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/package.json","includedInParent":true,"mtime":1601050256092},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/.babelrc","includedInParent":true,"mtime":1601049585985},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1601050224735},{"name":"../tensor_util_env","loc":{"line":17,"column":32},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util","loc":{"line":18,"column":22},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./gather","loc":{"line":19,"column":23},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/gather.js"},{"name":"./reshape","loc":{"line":20,"column":24},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js"},{"name":"./squeeze","loc":{"line":21,"column":24},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js"},{"name":"./where_async","loc":{"line":22,"column":27},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.booleanMaskAsync = void 0;\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nvar _gather = require(\"./gather\");\n\nvar _reshape = require(\"./reshape\");\n\nvar _squeeze = require(\"./squeeze\");\n\nvar _where_async = require(\"./where_async\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(tensor, mask, axis) {\n  const $tensor = (0, _tensor_util_env.convertToTensor)(tensor, 'tensor', 'boolMask');\n  const $mask = (0, _tensor_util_env.convertToTensor)(mask, 'mask', 'boolMask', 'bool');\n  const axisFrom = axis == null ? 0 : axis;\n  const maskDim = $mask.rank;\n  const tensorShape = $tensor.shape;\n  util.assert(maskDim > 0, () => 'mask cannot be scalar');\n  util.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, `mask's shape must match the first K dimensions of tensor's shape,`);\n  let leadingSize = 1;\n\n  for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n    leadingSize *= tensorShape[i];\n  }\n\n  const targetTensorShape = tensorShape.slice(0, axisFrom).concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n  const reshapedTensor = (0, _reshape.reshape)($tensor, targetTensorShape);\n  const reshapedMask = (0, _reshape.reshape)($mask, [-1]);\n  const positivePositions = await (0, _where_async.whereAsync)(reshapedMask);\n  const indices = (0, _squeeze.squeeze)(positivePositions, [1]);\n  const res = (0, _gather.gather)(reshapedTensor, indices, axisFrom); // Ensure no memory leak.\n\n  if (tensor !== $tensor) {\n    $tensor.dispose();\n  }\n\n  if (mask !== $mask) {\n    $mask.dispose();\n  }\n\n  indices.dispose();\n  reshapedTensor.dispose();\n  reshapedMask.dispose();\n  positivePositions.dispose();\n  return res;\n}\n\nconst booleanMaskAsync = booleanMaskAsync_;\nexports.booleanMaskAsync = booleanMaskAsync;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":18,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":24,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":41,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":15},"generated":{"line":59,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":32}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":59,"column":33}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":39}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":47,"column":31},"generated":{"line":59,"column":41}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":45}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":59,"column":47}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":51}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":59,"column":53}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":60,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":60,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":15},"generated":{"line":60,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":60,"column":18}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":34},"generated":{"line":60,"column":56}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":60,"column":62}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":42},"generated":{"line":60,"column":64}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":60,"column":72}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":52},"generated":{"line":60,"column":74}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":60,"column":84}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":60,"column":85}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":61,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":61,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":13},"generated":{"line":61,"column":13}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":61,"column":16}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":61,"column":54}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":61,"column":58}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":38},"generated":{"line":61,"column":60}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":61,"column":66}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":46},"generated":{"line":61,"column":68}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":61,"column":78}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":58},"generated":{"line":61,"column":80}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":61,"column":86}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":61,"column":87}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":62,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":62,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":62,"column":16}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":62,"column":19}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":62,"column":23}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":27},"generated":{"line":62,"column":27}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":62,"column":31}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":34},"generated":{"line":62,"column":34}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":62,"column":35}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":38},"generated":{"line":62,"column":38}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":62,"column":42}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":63,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":63,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":63,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":18},"generated":{"line":63,"column":18}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":63,"column":23}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":24},"generated":{"line":63,"column":24}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":63,"column":28}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":2},"generated":{"line":64,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":64,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":64,"column":19}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":64,"column":22}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":64,"column":29}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":64,"column":30}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":54,"column":2},"generated":{"line":64,"column":35}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":65,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":65,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":6},"generated":{"line":65,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":65,"column":7}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":65,"column":13}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":14},"generated":{"line":65,"column":14}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":65,"column":21}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":24},"generated":{"line":65,"column":24}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":65,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":27},"generated":{"line":65,"column":27}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":65,"column":33}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":65,"column":56}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":66,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":66,"column":7}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":24}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":66,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":66,"column":36}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":66,"column":37}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":66,"column":42}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":66,"column":43}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":66,"column":51}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":34},"generated":{"line":66,"column":53}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":42},"generated":{"line":66,"column":61}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":45},"generated":{"line":66,"column":64}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":66,"column":71}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":72}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":55},"generated":{"line":66,"column":74}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":60},"generated":{"line":66,"column":79}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":58,"column":61},"generated":{"line":66,"column":80}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":85}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":66,"column":87}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":154}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":67,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":67,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":61,"column":17},"generated":{"line":67,"column":17}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":61,"column":20},"generated":{"line":67,"column":20}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":67,"column":21}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":69,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":7},"generated":{"line":69,"column":7}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":69,"column":11}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":69,"column":12}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":15},"generated":{"line":69,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":69,"column":23}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":69,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":69,"column":26}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":29},"generated":{"line":69,"column":29}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":69,"column":37}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":69,"column":40}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":69,"column":47}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":49},"generated":{"line":69,"column":49}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":50},"generated":{"line":69,"column":50}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":69,"column":52}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":62,"column":54},"generated":{"line":69,"column":54}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":70,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":70,"column":4}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":15},"generated":{"line":70,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":70,"column":19}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":30},"generated":{"line":70,"column":30}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":31},"generated":{"line":70,"column":31}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":30},"generated":{"line":70,"column":32}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":70,"column":33}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":64,"column":3},"generated":{"line":71,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":73,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":73,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":65,"column":25},"generated":{"line":73,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":28}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":73,"column":39}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":18},"generated":{"line":73,"column":40}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":45}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":24},"generated":{"line":73,"column":46}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":47}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":73,"column":49}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":57}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":73,"column":59}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":65}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":73,"column":66}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":19},"generated":{"line":73,"column":67}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":73,"column":78}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":79}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":33},"generated":{"line":73,"column":81}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":44},"generated":{"line":73,"column":92}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":45},"generated":{"line":73,"column":93}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":33},"generated":{"line":73,"column":98}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":73,"column":99}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":59},"generated":{"line":73,"column":107}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":62},"generated":{"line":73,"column":110}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":67,"column":33},"generated":{"line":73,"column":117}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":73,"column":118}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":73,"column":119}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":74,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":74,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":74,"column":22}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":25},"generated":{"line":74,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":33},"generated":{"line":74,"column":47}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":25},"generated":{"line":74,"column":54}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":42},"generated":{"line":74,"column":56}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":25},"generated":{"line":74,"column":73}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":74,"column":74}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":75,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":75,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":20},"generated":{"line":75,"column":20}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":75,"column":23}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":31},"generated":{"line":75,"column":45}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":75,"column":50}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":38},"generated":{"line":75,"column":52}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":39},"generated":{"line":75,"column":53}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":40},"generated":{"line":75,"column":54}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":38},"generated":{"line":75,"column":55}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":75,"column":56}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":75,"column":57}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":76,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":76,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":25},"generated":{"line":76,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":28},"generated":{"line":76,"column":28}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":34},"generated":{"line":76,"column":34}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":45},"generated":{"line":76,"column":63}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":34},"generated":{"line":76,"column":75}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":76,"column":76}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":77,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":77,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":15},"generated":{"line":77,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":18},"generated":{"line":77,"column":18}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":26},"generated":{"line":77,"column":40}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":18},"generated":{"line":77,"column":57}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":45},"generated":{"line":77,"column":59}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":46},"generated":{"line":77,"column":60}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":45},"generated":{"line":77,"column":61}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":18},"generated":{"line":77,"column":62}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":77,"column":63}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":78,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":78,"column":8}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":11},"generated":{"line":78,"column":11}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":78,"column":14}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":21},"generated":{"line":78,"column":34}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":78,"column":48}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":37},"generated":{"line":78,"column":50}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":78,"column":57}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":46},"generated":{"line":78,"column":59}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":78,"column":67}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":78,"column":68}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":78,"column":69}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":78,"column":70}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":80,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":6},"generated":{"line":80,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":80,"column":12}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":17}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":80,"column":24}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":80,"column":26}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":81,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":81,"column":4}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":77,"column":11},"generated":{"line":81,"column":11}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":77,"column":12},"generated":{"line":81,"column":12}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":81,"column":19}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":78,"column":3},"generated":{"line":82,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":84,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":84,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":10},"generated":{"line":84,"column":10}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":15},"generated":{"line":84,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":84,"column":20}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":79,"column":22},"generated":{"line":84,"column":22}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":85,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":85,"column":4}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":85,"column":9}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":80,"column":10},"generated":{"line":85,"column":10}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":85,"column":17}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":81,"column":3},"generated":{"line":86,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":88,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":88,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":82,"column":9},"generated":{"line":88,"column":9}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":88,"column":10}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":88,"column":17}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":89,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":89,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":89,"column":16}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":83,"column":17},"generated":{"line":89,"column":17}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":89,"column":24}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":90,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":90,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":84,"column":14},"generated":{"line":90,"column":14}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":90,"column":15}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":90,"column":22}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":91,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":91,"column":2}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":85,"column":19},"generated":{"line":91,"column":19}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":85,"column":20},"generated":{"line":91,"column":20}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":91,"column":27}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":92,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":92,"column":9}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":92,"column":12}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":88,"column":1},"generated":{"line":93,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":95,"column":0}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":90,"column":13},"generated":{"line":95,"column":6}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":90,"column":29},"generated":{"line":95,"column":22}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":90,"column":32},"generated":{"line":95,"column":25}},{"source":"../../src/ops/boolean_mask.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":95,"column":42}}],"sources":{"../../src/ops/boolean_mask.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {gather} from './gather';\nimport {reshape} from './reshape';\nimport {squeeze} from './squeeze';\nimport {whereAsync} from './where_async';\n\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(\n    tensor: Tensor|TensorLike, mask: Tensor|TensorLike,\n    axis?: number): Promise<Tensor> {\n  const $tensor = convertToTensor(tensor, 'tensor', 'boolMask');\n  const $mask = convertToTensor(mask, 'mask', 'boolMask', 'bool');\n\n  const axisFrom = axis == null ? 0 : axis;\n  const maskDim = $mask.rank;\n  const tensorShape = $tensor.shape;\n\n  util.assert(maskDim > 0, () => 'mask cannot be scalar');\n  util.assertShapesMatch(\n      tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape,\n      `mask's shape must match the first K dimensions of tensor's shape,`);\n\n  let leadingSize = 1;\n  for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n    leadingSize *= tensorShape[i];\n  }\n  const targetTensorShape =\n      tensorShape.slice(0, axisFrom)\n          .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n  const reshapedTensor = reshape($tensor, targetTensorShape);\n  const reshapedMask = reshape($mask, [-1]);\n  const positivePositions = await whereAsync(reshapedMask);\n  const indices = squeeze(positivePositions, [1]);\n\n  const res = gather(reshapedTensor, indices, axisFrom);\n\n  // Ensure no memory leak.\n  if (tensor !== $tensor) {\n    $tensor.dispose();\n  }\n  if (mask !== $mask) {\n    $mask.dispose();\n  }\n  indices.dispose();\n  reshapedTensor.dispose();\n  reshapedMask.dispose();\n  positivePositions.dispose();\n\n  return res;\n}\n\nexport const booleanMaskAsync = booleanMaskAsync_;\n"},"lineCount":null}},"error":null,"hash":"f972c1eab7bb70491c38267e18e4984c","cacheData":{"env":{}}}