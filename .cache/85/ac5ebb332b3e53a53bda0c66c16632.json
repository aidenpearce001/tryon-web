{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/variable.js","dependencies":[{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/variable.js.map","includedInParent":true,"mtime":1603293791948},{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/src/ops/variable.ts","includedInParent":true,"mtime":1603293791948},{"name":"/mnt/1T/work/tryon-web/package.json","includedInParent":true,"mtime":1603296381928},{"name":"/mnt/1T/work/tryon-web/.babelrc","includedInParent":true,"mtime":1603293537878},{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1603293791948},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/variable.js","resolved":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/engine.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.variable = variable;\n\nvar _engine = require(\"../engine\");\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction variable(initialValue, trainable = true, name, dtype) {\n  return _engine.ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/variable.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":27,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":43,"column":9}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":17}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":43,"column":18}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":30}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":43,"column":32}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":43,"column":41}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":43,"column":44}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":48}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":47},"generated":{"line":43,"column":50}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":54}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":43,"column":56}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":61}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":43,"column":63}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":44,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":9}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":44,"column":24}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":36}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":44,"column":37}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":49}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":43},"generated":{"line":44,"column":51}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":60}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":54},"generated":{"line":44,"column":62}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":66}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":60},"generated":{"line":44,"column":68}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":73}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":44,"column":74}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":43,"column":1},"generated":{"line":45,"column":0}}],"sources":{"../../src/ops/variable.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Variable} from '../tensor';\nimport {DataType, Rank} from '../types';\n\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function variable<R extends Rank>(\n    initialValue: Tensor<R>, trainable = true, name?: string,\n    dtype?: DataType): Variable<R> {\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype) as\n      Variable<R>;\n}\n"},"lineCount":null}},"error":null,"hash":"38f9c1f1bedac495f5be83cf37932672","cacheData":{"env":{}}}