{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","dependencies":[{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js.map","includedInParent":true,"mtime":1603293791948},{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/src/ops/tensor.ts","includedInParent":true,"mtime":1603293791948},{"name":"/mnt/1T/work/tryon-web/package.json","includedInParent":true,"mtime":1603296381928},{"name":"/mnt/1T/work/tryon-web/.babelrc","includedInParent":true,"mtime":1603293537878},{"name":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1603293791948},{"name":"../tensor_util_env","loc":{"line":17,"column":27},"parent":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","resolved":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./tensor_ops_util","loc":{"line":18,"column":27},"parent":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","resolved":"/mnt/1T/work/tryon-web/node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tensor = tensor;\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _tensor_ops_util = require(\"./tensor_ops_util\");\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor(values, shape, dtype) {\n  const inferredShape = (0, _tensor_util_env.inferShape)(values, dtype);\n  return (0, _tensor_ops_util.makeTensor)(values, shape, inferredShape, dtype);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":29,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":57,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":16},"generated":{"line":57,"column":9}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":57,"column":15}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":57,"column":16}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":57,"column":22}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":54,"column":24},"generated":{"line":57,"column":24}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":57,"column":29}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":54,"column":45},"generated":{"line":57,"column":31}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":57,"column":36}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":54,"column":61},"generated":{"line":57,"column":38}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":58,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":58,"column":8}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":58,"column":21}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":58,"column":24}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":35},"generated":{"line":58,"column":57}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":58,"column":63}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":58,"column":65}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":58,"column":70}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":58,"column":71}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":59,"column":0}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":59,"column":9}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":20},"generated":{"line":59,"column":42}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":59,"column":48}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":28},"generated":{"line":59,"column":50}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":59,"column":55}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":59,"column":57}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":59,"column":70}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":50},"generated":{"line":59,"column":72}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":59,"column":77}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":59,"column":78}},{"source":"../../src/ops/tensor.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":60,"column":0}}],"sources":{"../../src/ops/tensor.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor<R extends Rank>(\n    values: TensorLike, shape?: ShapeMap[R], dtype?: DataType): Tensor<R> {\n  const inferredShape = inferShape(values, dtype);\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor<R>;\n}\n"},"lineCount":null}},"error":null,"hash":"ab368b212cca51be311b5346e1a31651","cacheData":{"env":{}}}