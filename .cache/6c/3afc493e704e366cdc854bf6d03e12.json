{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","dependencies":[{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js.map","includedInParent":true,"mtime":1601050224735},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/src/ops/logical_xor.ts","includedInParent":true,"mtime":1601050224735},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/package.json","includedInParent":true,"mtime":1601050256092},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/.babelrc","includedInParent":true,"mtime":1601049585985},{"name":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1601050224735},{"name":"../tensor_util_env","loc":{"line":17,"column":32},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./broadcast_util","loc":{"line":18,"column":43},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js"},{"name":"./logical_and","loc":{"line":19,"column":27},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js"},{"name":"./logical_not","loc":{"line":20,"column":27},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js"},{"name":"./logical_or","loc":{"line":21,"column":26},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js"},{"name":"./operation","loc":{"line":22,"column":19},"parent":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","resolved":"/home/aiden/Desktop/project/tfjs-models/handpose/demo/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logicalXor = void 0;\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _broadcast_util = require(\"./broadcast_util\");\n\nvar _logical_and = require(\"./logical_and\");\n\nvar _logical_not = require(\"./logical_not\");\n\nvar _logical_or = require(\"./logical_or\");\n\nvar _operation = require(\"./operation\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_(a, b) {\n  const $a = (0, _tensor_util_env.convertToTensor)(a, 'a', 'logicalXor', 'bool');\n  const $b = (0, _tensor_util_env.convertToTensor)(b, 'b', 'logicalXor', 'bool');\n  (0, _broadcast_util.assertAndGetBroadcastShape)($a.shape, $b.shape); // x ^ y = (x | y) & ~(x & y)\n\n  return (0, _logical_and.logicalAnd)((0, _logical_or.logicalOr)(a, b), (0, _logical_not.logicalNot)((0, _logical_and.logicalAnd)(a, b)));\n}\n\nconst logicalXor = (0, _operation.op)({\n  logicalXor_\n});\nexports.logicalXor = logicalXor;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":18,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":37,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":52,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":52,"column":9}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":52,"column":20}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":52,"column":21}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":52,"column":22}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":52,"column":24}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":52,"column":25}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":44,"column":46},"generated":{"line":52,"column":27}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":53,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":53,"column":8}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":10},"generated":{"line":53,"column":10}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":53,"column":13}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":29},"generated":{"line":53,"column":51}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":53,"column":52}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":32},"generated":{"line":53,"column":54}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":53,"column":57}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":37},"generated":{"line":53,"column":59}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":53,"column":71}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":51},"generated":{"line":53,"column":73}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":53,"column":79}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":53,"column":80}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":54,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":54,"column":8}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":54,"column":10}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":54,"column":13}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":29},"generated":{"line":54,"column":51}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":54,"column":52}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":32},"generated":{"line":54,"column":54}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":54,"column":57}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":37},"generated":{"line":54,"column":59}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":54,"column":71}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":51},"generated":{"line":54,"column":73}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":54,"column":79}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":54,"column":80}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":55,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":29},"generated":{"line":55,"column":50}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":31},"generated":{"line":55,"column":52}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":32},"generated":{"line":55,"column":53}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":55,"column":58}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":39},"generated":{"line":55,"column":60}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":41},"generated":{"line":55,"column":62}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":42},"generated":{"line":55,"column":63}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":55,"column":68}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":44,"column":46},"generated":{"line":55,"column":70}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":55,"column":71}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":57,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":57,"column":9}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":20},"generated":{"line":57,"column":38}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":30},"generated":{"line":57,"column":65}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":20},"generated":{"line":57,"column":66}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":33},"generated":{"line":57,"column":68}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":20},"generated":{"line":57,"column":69}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":57,"column":70}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":37},"generated":{"line":57,"column":72}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":48},"generated":{"line":57,"column":101}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":59},"generated":{"line":57,"column":130}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":48},"generated":{"line":57,"column":131}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":62},"generated":{"line":57,"column":133}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":48},"generated":{"line":57,"column":134}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":37},"generated":{"line":57,"column":135}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":57,"column":136}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":57,"column":137}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":51,"column":1},"generated":{"line":58,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":60,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":13},"generated":{"line":60,"column":6}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":60,"column":16}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":60,"column":19}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":29},"generated":{"line":60,"column":38}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":61,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":61,"column":2}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":29},"generated":{"line":62,"column":0}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":62,"column":1}},{"source":"../../src/ops/logical_xor.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":62,"column":2}}],"sources":{"../../src/ops/logical_xor.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {logicalAnd} from './logical_and';\nimport {logicalNot} from './logical_not';\nimport {logicalOr} from './logical_or';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalXor', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalXor', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  // x ^ y = (x | y) & ~(x & y)\n  return logicalAnd(logicalOr(a, b), logicalNot(logicalAnd(a, b)));\n}\n\nexport const logicalXor = op({logicalXor_});\n"},"lineCount":null}},"error":null,"hash":"20c51da79ccae6d07d043029ed2a192c","cacheData":{"env":{}}}