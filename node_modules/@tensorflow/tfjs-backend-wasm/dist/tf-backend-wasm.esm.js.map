{"version":3,"file":"tf-backend-wasm.esm.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/binary_kernel.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/Identity.ts","../src/kernels/Transpose.ts","../src/kernels/kernel_utils.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/BatchMatMul.ts","../src/kernels/Cast.ts","../src/kernels/ClipByValue.ts","../src/kernels/Concat.ts","../src/kernels/Conv2D.ts","../src/kernels/Conv2DBackpropInput.ts","../src/kernels/Cos.ts","../src/kernels/CropAndResize.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/GatherNd.ts","../src/kernels/GatherV2.ts","../src/kernels/Max.ts","../src/kernels/MaxPool.ts","../src/kernels/Min.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV4.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/OneHot.ts","../src/kernels/PadV2.ts","../src/kernels/Prelu.ts","../src/kernels/Reshape.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/Reverse.ts","../src/kernels/RotateWithOffset.ts","../src/kernels/ScatterNd.ts","../src/kernels/SelectV2.ts","../src/kernels/Sigmoid.ts","../src/kernels/Slice.ts","../src/kernels/Softmax.ts","../src/kernels/Sum.ts","../src/kernels/Tile.ts","../src/kernels/ZerosLike.ts","../src/register_all_kernels.ts","../src/kernels/Div.ts","../src/kernels/Equal.ts","../src/kernels/Exp.ts","../src/kernels/Fill.ts","../src/kernels/FloorDiv.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/LogicalAnd.ts","../src/kernels/Maximum.ts","../src/kernels/Minimum.ts","../src/kernels/Multiply.ts","../src/kernels/Negate.ts","../src/kernels/NotEqual.ts","../src/kernels/OnesLike.ts","../src/kernels/Pow.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/Rsqrt.ts","../src/kernels/Sin.ts","../src/kernels/Split.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/Sub.ts","../src/kernels/Tanh.ts","../src/kernels/Unpack.ts","../src/flags_wasm.ts","../wasm-out/tfjs-backend-wasm-simd.js","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../src/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, activation: number, biasId: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      outId);\n\n  return out;\n}\n\nexport const fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function createUnaryKernelConfig(kernelName: string): KernelConfig {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    // Currently only some float operations support full broadcast.\n    if (supportsFullBroadcast && a.dtype === 'float32') {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${a.dtype} ${kernelName}.`);\n    }\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmBatchMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, outId);\n\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  const batchDim = util.sizeFromShape(inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2DNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {strides, pad, dilations, dataFormat, dimRoundingMode, activation} =\n      attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {strides, pad, dilations, dataFormat, dimRoundingMode, activation} =\n      attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, Tensor, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params as Tensor, indices as Tensor);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGather:\n    (xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n     indicesId: number, axis: number, outStrides: Uint8Array, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // axis\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis} = attrs;\n\n  const newShape = x.shape.slice();\n  newShape[axis] = util.sizeFromShape(indices.shape);\n  const stridesSize = x.shape.length - 1;\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(newShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, axis,\n      outStridesBytes, outId);\n\n  // reshape\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis);\n\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {Max, MaxAttrs, MaxInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NamedAttrMap, NamedTensorInfoMap, Reshape, ReshapeAttrs, ReshapeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(args: {\n  inputs: NamedTensorInfoMap,\n  attrs: NamedAttrMap,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs as {} as ReshapeInputs;\n  const {shape} = attrs as {} as ReshapeAttrs;\n  return {dataId: x.dataId, shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  return reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SelectV2, SelectV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap(SelectV2, null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectV2Inputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectV2Config: KernelConfig = {\n  kernelName: SelectV2,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, Tensor, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n  const [begin_, size_] = slice_util.parseSliceParams(x as Tensor, begin, size);\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.typedArrayFromHeap(x);\n  const out = backend.makeOutput(size_, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  const xStrides = util.computeStrides(x.shape);\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n    outVals.set(\n        xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    return out;\n  }\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    genericSliceSlow(xVals, x, outVals, begin_, size_);\n  }\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nfunction genericSliceSlow(\n    xVals: backend_util.TypedArray, xInfo: TensorInfo,\n    outVals: backend_util.TypedArray, begin: number[], size: number[]): void {\n  const outBuf = buffer(size, xInfo.dtype, outVals);\n  const xBuf = buffer(xInfo.shape, xInfo.dtype, xVals);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const loc = outBuf.indexToLoc(i);\n    const xLoc = loc.map((idx, j) => idx + begin[j]);\n    outVals[i] = xBuf.get(...xLoc) as number;\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {castConfig} from './kernels/Cast';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {depthwiseConv2DNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {divConfig} from './kernels/Div';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {fillConfig} from './kernels/Fill';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negateConfig} from './kernels/Negate';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectV2Config} from './kernels/SelectV2';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {splitVConfig} from './kernels/Split';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  absConfig,\n  addConfig,\n  addNConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  castConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  cropAndResizeConfig,\n  depthwiseConv2DNativeConfig,\n  divConfig,\n  equalConfig,\n  expConfig,\n  fillConfig,\n  floorDivConfig,\n  fusedMatMulConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  minConfig,\n  minimumConfig,\n  multiplyConfig,\n  negateConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectV2Config,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  subConfig,\n  sumConfig,\n  tanhConfig,\n  tileConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Div, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const divConfig: KernelConfig =\n    createBinaryKernelConfig(Div, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Negate} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negateConfig: KernelConfig = createUnaryKernelConfig(Negate);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function split(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: split as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  const {axis} = attrs;\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n","\nvar WasmBackendModuleSimd = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleSimd) {\n  WasmBackendModuleSimd = WasmBackendModuleSimd || {};\n\nvar Module=typeof WasmBackendModuleSimd!==\"undefined\"?WasmBackendModuleSimd:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":151,\"maximum\":151+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5254528,DYNAMICTOP_PTR=11488;var INITIAL_INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":2147483648/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),PAGE_MULTIPLE));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"e\":_emscripten_memcpy_big,\"f\":_emscripten_resize_heap,\"g\":_fd_close,\"d\":_fd_seek,\"c\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return(_Div=Module[\"_Div\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Negate=Module[\"_Negate\"]=function(){return(_Negate=Module[\"_Negate\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return(dynCall_vi=Module[\"dynCall_vi\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return(dynCall_v=Module[\"dynCall_v\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModuleSimd\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModuleSimd;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModuleSimd; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModuleSimd\"] = WasmBackendModuleSimd;\n    ","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":146,\"maximum\":146+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5254800,DYNAMICTOP_PTR=11760;var INITIAL_INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":2147483648/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),PAGE_MULTIPLE));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"e\":_emscripten_memcpy_big,\"f\":_emscripten_resize_heap,\"g\":_fd_close,\"d\":_fd_seek,\"c\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return(_Div=Module[\"_Div\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Negate=Module[\"_Negate\"]=function(){return(_Negate=Module[\"_Negate\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return(dynCall_vi=Module[\"dynCall_vi\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return(dynCall_v=Module[\"dynCall_v\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModule\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModule;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModule; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModule\"] = WasmBackendModule;\n    ","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, engine, env, KernelBackend, registerBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport wasmFactorySimd from '../wasm-out/tfjs-backend-wasm-simd.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\nconst WASM_PRIORITY = 2;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {};\n    this.move(dataId, values, shape, dtype);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId, {id, stringBytes, shape, dtype, memoryOffset: null});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  disposeData(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    this.wasm._free(data.memoryOffset);\n    this.wasm.tfjs.disposeData(data.id);\n    this.dataIdMap.delete(dataId);\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      dataId = {};\n      const id = this.dataIdNextNumber++;\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Uknown dtype ${dtype}`);\n    }\n  }\n}\n\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n\nfunction createInstantiateWasmFunc(path: string) {\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const simdSupported = await env().getAsync('WASM_HAS_SIMD_SUPPORT');\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n    if (wasmPath != null) {\n      factoryConfig.locateFile = (path, prefix) => {\n        if (path.endsWith('.wasm')) {\n          return wasmPath;\n        }\n        return prefix + path;\n      };\n      // use wasm instantiateWasm override when system fetch is not available.\n      // For detail references\n      // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n      if (customFetch) {\n        factoryConfig.instantiateWasm = createInstantiateWasmFunc(wasmPath);\n      }\n    }\n    const wasm = simdSupported ? wasmFactorySimd(factoryConfig) :\n                                 wasmFactory(factoryConfig);\n    const voidReturnType: string = null;\n    // Using the tfjs namespace to avoid conflict with emscripten's API.\n    wasm.tfjs = {\n      init: wasm.cwrap('init', null, []),\n      registerTensor: wasm.cwrap(\n          'register_tensor', null,\n          [\n            'number',  // id\n            'number',  // size\n            'number',  // memoryOffset\n          ]),\n      disposeData: wasm.cwrap('dispose_data', voidReturnType, ['number']),\n      dispose: wasm.cwrap('dispose', voidReturnType, []),\n    };\n    let initialized = false;\n    wasm.onRuntimeInitialized = () => {\n      initialized = true;\n      initAborted = false;\n      resolve({wasm});\n    };\n    wasm.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nlet wasmPath: string = null;\nlet initAborted = false;\nlet customFetch = false;\n/**\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n */\n/** @doc {heading: 'Environment', namespace: 'wasm'} */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  customFetch = false;\n  initAborted = false;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '2.1.0';\nexport {version};\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","assertAndGetBroadcastShape","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","argMaxConfig","ArgMax","inputId","input","transposedId","slice","outerSize","innerSize","disposeData","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","cast","castConfig","Cast","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","concatConfig","Concat","t","sumInnerDims","innerDims","innerDim","outVals","outOffset","inOffset","vals","subarray","wasmConv2d","conv2DConfig","Conv2D","filter","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","computeStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","InterpolationMethod","wasmCropAndResize","wasmDepthwiseConv2d","wasmBatchNorm","wasmFusedConv2d","wasmFusedDepthwiseConv2d","wasmGatherNd","wasmGather","wasmMax","wasmMaxPool","wasmMin","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","wasmOneHot","wasmPadV2","wasmPrelu","reshape","wasmResizeBilinear","wasmReverse","wasmRotate","wasmScatterNd","wasmSelect","begin","size","begin_","size_","slice_util","parseSliceParams","isContinous","isSliceContinous","xVals","xStrides","flatOffset","computeFlatOffset","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","xInfo","outBuf","xBuf","xLoc","indexToLoc","idx","genericSliceSlow","wasmSum","wasmTile","kernelConfigs","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","DepthwiseConv2dNative","$dilations","Div","Equal","Exp","Fill","value","fill","FloorDiv","FusedBatchNorm","varianceEpsilon","mean","variance","offset","scale","meanId","varianceId","offsetId","scaleId","FusedConv2D","FusedDepthwiseConv2D","GatherNd","params","indices","resultShape","numSlices","sliceSize","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","GatherV2","stridesSize","xStridesBytes","outStridesBytes","parsedAxis","shapeInfo","segment_util","collectGatherOpShapeInfo","outputShape","Greater","GreaterEqual","Less","LessEqual","Log","LogicalAnd","Max","reductionIndices","keepDims","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","expandShapeToKeepDim","Maximum","MaxPool","Min","Minimum","Multiply","Negate","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","NonMaxSuppressionV4","padToMaxOutputSize","NonMaxSuppressionV5","softNmsSigma","NotEqual","OneHot","depth","onValue","offValue","OnesLike","PadV2","paddings","constantValue","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","Pow","Prelu","alpha","weightsId","Relu","Relu6","Reshape","ResizeBilinear","images","alignCorners","newHeight","newWidth","batch","oldHeight","oldWidth","numChannels","xData","Reverse","dims","axesBytes","outShapeBytes","RotateWithOffset","radians","fillValue","center","imageId","imageHeight","imageWidth","centerX","centerY","getImageCenter","fillValues","fillBytes","Rsqrt","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","SelectV2","condition","e","conditionId","tId","eId","cRank","tRank","Sigmoid","Sin","Slice","Softmax","logits","dim","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","Sqrt","Square","Sub","Sum","reductionAxes","Tanh","Tile","reps","newShapeBytes","Unpack","numOutputs","outIndex","outs","ZerosLike","kernelConfig","registerKernel","env","registerFlag","async","WebAssembly","validate","_scriptDir","WasmBackendModuleSimd","document","currentScript","src","undefined","__filename","key","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","require$$0","dirname","__dirname","filename","binary","require$$1","ret","assert","replace","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","wasmBinary","wasmMemory","bind","err","wasmTable","Table","initial","maximum","element","ABORT","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","HEAP8","HEAP32","WASM_PAGE_SIZE","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","INITIAL_INITIAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","Math_ceil","Math","ceil","Math_floor","floor","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","what","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","getBinaryPromise","fetch","Promise","resolve","reject","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","instantiateAsync","_abort","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","cutDown","overGrownHeapSize","min","max","___wasm_call_ctors","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_roundf","d","g","c","memory","table","asm","calledRun","status","this","name","message","run","doRun","setTimeout","old","runCaller","pop","WasmBackendModule","BackendWasm","KernelBackend","[object Object]","super","tfjs","init","DataStorage","engine","values","move","numDataIds","start","now","kernelMs","dataIdNextNumber","stringBytes","memoryOffset","numBytes","bytesPerElement","_malloc","registerTensor","byteOffset","readSync","typedArrayFromBuffer","delete","dispose","unreliable","write","registerBackend","simdSupported","getAsync","factoryConfig","wasmPath","endsWith","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","wasmFactorySimd","wasmFactory","initialized","onRuntimeInitialized","initAborted","onAbort","setWasmPath","usePlatformFetch","version"],"mappings":"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"}